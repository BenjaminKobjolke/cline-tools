Operating System
You are working on Windows.
Shell
You have a Windows PowerShell to execute commands.
PowerShell does not support && to chain commands.
Example that won't work:
flutter create my_app && cd my_app
Instead, execute commands separately.
Project Structure
Entry Point
The main entry point of the Flutter project is lib/main.dart.
Coding Conventions
Follow Flutter's Dart Style Guide.
Format code using:
dart format .
Use doc comments (///) for documentation.
Follow SOLID principles and modularize code.
Split large widgets into reusable components.
Project Organization
Group related widgets and services into separate files inside the lib/ directory.

Example structure:

lib/
main.dart
screens/
home_screen.dart
settings_screen.dart
widgets/
custom_button.dart
app_bar.dart
services/
api_service.dart
auth_service.dart

Keep business logic separate from UI.

Use State Management (e.g., Provider, Riverpod, or Bloc).

Configuration & Dependencies
Environment Configuration
Store settings in lib/config.dart or use .env files.
Parse .env files using the flutter_dotenv package.
Dependency Management
Use pubspec.yaml to manage dependencies.
After adding new dependencies, always run:
flutter pub get
Prefer the latest stable versions.
Execution & Development
Running the Project
Run the app in debug mode:
flutter run
Specify a target platform:
flutter run -d chrome # Web
flutter run -d android # Android Emulator
Using Virtual Environments
Always use Flutterâ€™s built-in environment (no need for venv like in Python).
Make sure Flutter is installed and added to PATH.
Logging & Error Handling
Logging
Use dart:developer or the logger package instead of print().

Example:

import 'dart:developer';

void fetchData() {
try {
// API call logic
log("Data fetched successfully", name: "API");
} catch (e) {
log("Error fetching data: $e", level: 3);
}
}

Exception Handling
Use try-catch blocks for API calls and critical functions.
Display friendly error messages to the user.
Implement fallback mechanisms if something fails.
Automation & Scripts
Automating Setup
Provide .bat scripts for easier setup and execution.

install.bat
@echo off
flutter pub get
echo Dependencies installed successfully.
pause

run.bat
@echo off
flutter run
pause

Documentation
Maintain a README.md explaining:
Project setup
How to run the app
Key dependencies
Include comments in code for clarity.